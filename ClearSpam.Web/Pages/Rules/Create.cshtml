@page
@model ClearSpam.Web.Pages.Rules.CreateRuleModel

@{
    ViewData["Title"] = "Create Rule for Account " + Model.Rule.Account.Server;
}

<h1>Create Rule for Account: @Model.Rule.Account.Name</h1>

<form method="post">
    <input asp-for="Rule.AccountId" type="hidden" />
    <div class="row">
        <div class="col-12">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <div class="form-group">
                <label asp-for="Rule.Field" class="control-label"></label>
                <select asp-for="Rule.Field" class="form-control">
                    @foreach (var field in Model.Fields)
                    {
                        <option value="@field.Name">@field.Name</option>
                    }
                </select>
                <span asp-validation-for="Rule.Field" class="text-danger"></span>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label asp-for="Rule.Content" class="control-label"></label>
                <input asp-for="Rule.Content" class="form-control" />
                <span asp-validation-for="Rule.Content" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>
<div>
    <a asp-page="../Accounts/Details" asp-route-id="@Model.Rule.AccountId">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
